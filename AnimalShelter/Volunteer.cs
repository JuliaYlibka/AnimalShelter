//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AnimalShelter
{
    using System;
    using System.Collections.Generic;
    
    public partial class Volunteer
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Volunteer()
        {
            this.Animal = new HashSet<Animal>();
            this.Care_log = new HashSet<Care_log>();
            this.Donation = new HashSet<Donation>();
        }
    
        public int ID_volunteer { get; set; }
        public string Surname { get; set; }
        public string First_name { get; set; }
        public string Patronymic { get; set; }
        public int Gender { get; set; }
        public System.DateTime Date_of_birth { get; set; }
        public string Address { get; set; }
        public string Phone_number { get; set; }
        public string Email { get; set; }
        public System.DateTime Date_of_hire { get; set; }
        public string Login { get; set; }
        public string Password { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Animal> Animal { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Care_log> Care_log { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Donation> Donation { get; set; }
        public virtual Gender Gender1 { get; set; }

        // Метод для получения полного имени в формате "Фамилия И.О."
        public string FullNameWithInitials
        {
            get
            {
                string firstInitial = !string.IsNullOrEmpty(First_name) ? First_name.Substring(0, 1) : string.Empty;
                string patronymicInitial = !string.IsNullOrEmpty(Patronymic) ? Patronymic.Substring(0, 1) : string.Empty;
                string initials = $"{firstInitial}. {patronymicInitial}.";
                return $"{Surname} {initials}".Trim();
            }
        }
    }
}
